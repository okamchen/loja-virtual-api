// <auto-generated />
using loja_virtual.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace lojavirtual.Migrations
{
    [DbContext(typeof(LojaVirtualContext))]
    [Migration("20171209193921_init-project")]
    partial class initproject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("loja_virtual.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("loja_virtual.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ClientId");

                    b.Property<DateTime>("DateAccepted");

                    b.Property<DateTime>("DateExpedition");

                    b.Property<DateTime>("DateOrder");

                    b.Property<long>("IdClient");

                    b.Property<int?>("OrderProductId");

                    b.Property<int?>("PriceId");

                    b.Property<string>("Situation");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrderProductId")
                        .IsUnique();

                    b.HasIndex("PriceId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("loja_virtual.Models.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("PriceId");

                    b.Property<int?>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("PriceId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("loja_virtual.Models.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateUpdate");

                    b.Property<int?>("ProductId");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("loja_virtual.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("loja_virtual.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Profile");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("loja_virtual.Models.Order", b =>
                {
                    b.HasOne("loja_virtual.Models.User", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("loja_virtual.Models.OrderProduct", "OrderProduct")
                        .WithOne("Order")
                        .HasForeignKey("loja_virtual.Models.Order", "OrderProductId");

                    b.HasOne("loja_virtual.Models.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");
                });

            modelBuilder.Entity("loja_virtual.Models.OrderProduct", b =>
                {
                    b.HasOne("loja_virtual.Models.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");

                    b.HasOne("loja_virtual.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("loja_virtual.Models.Price", b =>
                {
                    b.HasOne("loja_virtual.Models.Product")
                        .WithMany("HistoricPrice")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("loja_virtual.Models.Product", b =>
                {
                    b.HasOne("loja_virtual.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
